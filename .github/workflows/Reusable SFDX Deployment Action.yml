name: Reusable SFDX Deployment Action

on:
  workflow_call:
    inputs:
      ref:
        description: The branch name to deploy
        type: string
        default: main
        required: true
      run-tests:
        description: Decides if you want to run the tests for deployments
        type: boolean
        default: true
        required: false
      check-only:
        description: Deployment type
        type: boolean
        default: true
        required: false
      env:
        description: Environment
        type: string
        required: true
      path:
        description: path to SFDX project
        type: string
        required: false
        default: ""
        
jobs:
  SFDX-Deployment:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    steps:
        - uses: actions/setup-node@v3
          with:
            node-version: "20"
        - name: Checkout source code
          uses: actions/checkout@v3
          with:
            ref: ${{ inputs.ref }}
            fetch-depth: 0 
            
        - name: Install Salesforce CLI
          run: >        
            wget
            https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
            
            mkdir ~/sfdx
  
            tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
  
            echo "$HOME/sfdx/bin" >> $GITHUB_PATH
  
            ~/sfdx/bin/sfdx version
         
        - name: Setup server key
          run: > 
            echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY }}" > server.key
            
            sf org login jwt --client-id ${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ vars.SALESFORCE_USERNAME }} --set-default-dev-hub -a targetOrg

        - name: JWT Authentication to target Org
          run: sf org login jwt --client-id ${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ vars.SALESFORCE_USERNAME }} --set-default-dev-hub -a targetOrg
      
        - name: "${{ inputs.check-only == true && 'Validate' || 'Deploy' }} Package ${{ inputs.run-tests == true && 'with Tests' ||  ' without Tests'}}"
          run: "sfdx source:deploy -x manifest/package.xml --predestructivechanges manifest/destructiveChangesPre.xml --postdestructivechanges manifest/destructiveChangesPost.xml ${{ inputs.check-only == true && '-c' || '' }} ${{ inputs.run-tests == true && '-l RunLocalTests' || '-l NoTestRun' }} -w 1000 --verbose --loglevel fatal --json -u targetOrg -g"
          
              
              
              
          



          
               
        
        
          
      
